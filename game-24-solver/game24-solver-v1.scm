WXME0108 ## 
#|
   This file is in PLT Scheme editor format.
   Most likely, it was created by saving a program in DrScheme,
   and it probably contains a program with non-text elements (such
   as pictures, comment boxes, or test-cases boxes).
   Open this file in DrScheme to read its content.
                 www.plt-scheme.org
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
3 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 18 #"java-comment-box%\0"
1 0 23 #"java-interactions-box%\0"
1 0 15 #"make-line-snip\0"
1 0 15 #"make-line-snip\0"
1 0 13 #"example-box%\0"
2 0 18 #"interactions-box%\0"
2 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 34 #"drscheme:vertical-separator-snip%\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 10 #"text-box%\0"
1 0 1 6 #"wxloc\0"
00000000000 1 45 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"Consolas\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 27
#"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 40
#"framework:syntax-coloring:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 41
#"framework:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 94 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
41 #"framework:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 94 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 40
#"framework:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 42
#"framework:syntax-coloring:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 45
#"framework:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 39
#"framework:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 39
#"framework:syntax-coloring:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
49 #"drscheme:check-syntax:lexically-bound-identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 42
#"drscheme:check-syntax:imported-identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 37
#"profj:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 36
#"profj:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"profj:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
37 #"profj:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
35 #"profj:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 40
#"profj:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"profj:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 4
#"XML\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 0 1
#"\0"
0 75 9 #"Consolas\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
00000000002 0 00000000000 7 00000000000 2792 0 11 3 17
#";; Game 24 solver"
0 0 4 29 1 #"\n"
0 0 11 3 14 #";; version 1.0"
0 0 4 29 1 #"\n"
0 0 11 3 12 #";; 17/4/2016"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 8 3 7 #"require"
0 0 4 3 1 #" "
0 0 13 3 12 #"\"my-func.ss\""
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 16 #";; state example"
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; ((5 1 2 3) (0) ())"
0 0 4 29 1 #"\n"
0 0 11 3 45 #";; the first list (5 1 2 3) is remain numbers"
0 0 4 29 1 #"\n"
0 0 11 3 49 #";; the second list (0) is the result of operation"
0 0 4 29 1 #"\n"
0 0 11 3 46 #";; the third list () is sequence of operation "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 13 #";; goal state"
0 0 4 29 1 #"\n"
0 0 11 3 28 #";; (() (24) (.. abitary ..))"
0 0 4 29 1 #"\n"
0 0 11 3 51 #";; check match goal state for first and second list"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 8 3 1 #"-"
0 0 8 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 2 #"(("
0 0 14 3 1 #"5"
0 0 4 3 1 #" "
0 0 14 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 1 #"3"
0 0 16 3 7 #")()()))"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 8 3 1 #"-"
0 0 8 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 2 #"(("
0 0 14 3 1 #"5"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"2"
0 0 16 3 7 #")()()))"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 8 3 1 #"-"
0 0 8 3 1 #"3"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 2 #"(("
0 0 14 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 16 3 7 #")()()))"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 8 3 1 #"-"
0 0 8 3 1 #"4"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 2 #"(("
0 0 14 3 1 #"7"
0 0 4 3 1 #" "
0 0 14 3 1 #"8"
0 0 4 3 1 #" "
0 0 14 3 1 #"8"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 16 3 7 #")()()))"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 1 #"d"
0 0 9 3 1 #"e"
0 0 9 3 1 #"f"
0 0 9 3 1 #"i"
0 0 9 3 1 #"n"
0 0 9 3 1 #"e"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 1 #"o"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 4 #"(()("
0 0 14 3 1 #"2"
0 0 14 3 1 #"4"
0 0 16 3 5 #")()))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 12 #";; GET-MOVES"
0 0 4 29 1 #"\n"
0 0 11 3 14 #";; Algorithm I"
0 0 4 29 1 #"\n"
0 0 11 3 61
#";; 1. if length of remain number is less than or equal 4 then"
0 0 4 29 1 #"\n"
0 0 11 3 81
(
 #";;       1.1 select number at index 1 operate for all operation are"
 #"  +,-,* and / "
) 0 0 11 3 12 #"with others."
0 0 4 29 1 #"\n"
0 0 11 3 83
(
 #";;       1.2 change selected index to index 2 and do step 1 util fi"
 #"nished the last "
) 0 0 11 3 5 #"index"
0 0 4 29 1 #"\n"
0 0 11 3 42 #";; 2. if length of remain number is 2 then"
0 0 4 29 1 #"\n"
0 0 11 3 66
#";;       2.1 operate the previous result with group of rest number"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 26 #";; state : ((5 1 2 3)()())"
0 0 4 29 1 #"\n"
0 0 11 3 26 #";; (car state) : (5 1 2 3)"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"G"
0 0 8 3 1 #"E"
0 0 8 3 1 #"T"
0 0 8 3 1 #"-"
0 0 8 3 1 #"M"
0 0 8 3 1 #"O"
0 0 8 3 1 #"V"
0 0 8 3 1 #"E"
0 0 8 3 1 #"S"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 3 #"let"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 3 #"num"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 11 3 15 #";; check length"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"and"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"length"
0 0 4 3 1 #" "
0 0 8 3 3 #"num"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 2 #"<="
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"length"
0 0 4 3 1 #" "
0 0 8 3 3 #"num"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 11 3 16 #";; get-all-pairs"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 1 #"g"
0 0 8 3 1 #"e"
0 0 8 3 1 #"n"
0 0 8 3 1 #"e"
0 0 8 3 1 #"r"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 8 3 1 #"-"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 8 3 1 #"l"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 24 #";; generate step by step"
0 0 4 29 1 #"\n"
0 0 11 3 28 #";; ex. state ((5 1 2 3)()())"
0 0 4 29 1 #"\n"
0 0 11 3 22 #";; 1. get-pair index 0"
0 0 4 29 1 #"\n"
0 0 11 3 15 #";; '() --> skip"
0 0 4 29 1 #"\n"
0 0 11 3 26 #";; 2. get-pair index 1,2,3"
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; get-pair index (1)"
0 0 4 29 1 #"\n"
0 0 11 3 20 #";; ((5 1)(5 2)(5 3))"
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; get-pair index (2)"
0 0 4 29 1 #"\n"
0 0 11 3 15 #";; ((1 2)(1 3))"
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; get-pair index (3)"
0 0 4 29 1 #"\n"
0 0 11 3 10 #";; ((2 3))"
0 0 4 29 1 #"\n"
0 0 11 3 46 #";; all pair = ((5 1)(5 2)(5 3)(1 2)(1 3)(2 3))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 24 #";; 3. p = (car get-pair)"
0 0 4 29 1 #"\n"
0 0 11 3 34 #";; operate all operators (+ - * /)"
0 0 4 29 1 #"\n"
0 0 11 3 15 #";; p(0) = (5 1)"
0 0 4 29 1 #"\n"
0 0 11 3 37 #";; calculate (5+1) => ((2 3)(6)(5+1))"
0 0 4 29 1 #"\n"
0 0 11 3 37 #";; calculate (5-1) => ((2 3)(4)(5-1))"
0 0 4 29 1 #"\n"
0 0 11 3 37 #";; calculate (5*1) => ((2 3)(5)(5*1))"
0 0 4 29 1 #"\n"
0 0 11 3 37 #";; calculate (5/1) => ((2 3)(5)(5/1))"
0 0 4 29 1 #"\n"
0 0 11 3 52 #";; p(1) = (5 2) ... continuous operate all operators"
0 0 4 29 1 #"\n"
0 0 11 3 25 #";; p(2) do same p(0) p(1)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 43 #";; 4. result is all possible pairs of state"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 28 #";; ex. state ((5 1 2 3)()())"
0 0 4 29 1 #"\n"
0 0 11 3 44 #";; lst-pair ((5 1)(5 2)(5 3)(1 2)(1 3)(2 3))"
0 0 4 29 1 #"\n"
0 0 11 3 34 #";; (generate-all '((5 1 3 2)()()))"
0 0 4 29 1 #"\n"
0 0 11 3 34 #";; (generate-all '((5 4 4 2)()()))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 8 3 3 #"OPs"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 4 3 1 #" "
0 0 8 3 1 #"-"
0 0 4 3 1 #" "
0 0 8 3 1 #"x"
0 0 4 3 1 #" "
0 0 8 3 2 #"\303\267"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 12 #"generate-all"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"generate"
0 0 4 3 1 #" "
0 0 8 3 8 #"lst-pair"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 4 3 1 #" "
0 0 8 3 8 #"lst-pair"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 16 3 1 #"("
0 0 8 3 6 #"append"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 7 #"cal-all"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 8 #"lst-pair"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 3 #"OPs"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 16 3 1 #"("
0 0 8 3 8 #"generate"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 8 3 8 #"lst-pair"
0 0 16 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 11 3 7 #";; body"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 8 3 8 #"generate"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 13 #"get-all-pairs"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 16 #";; all operators"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 7 #"cal-all"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 8 3 6 #"lst-op"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 4 3 1 #" "
0 0 8 3 6 #"lst-op"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 16 3 1 #"("
0 0 8 3 6 #"append"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"cal-op"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 6 #"lst-op"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 16 3 1 #"("
0 0 8 3 7 #"cal-all"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 8 3 6 #"lst-op"
0 0 16 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 15 #";; one operator"
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; ex. case 4 numbers"
0 0 4 29 1 #"\n"
0 0 11 3 26 #";; state = ((5 4 4 2)()())"
0 0 4 29 1 #"\n"
0 0 11 3 38 #";; pairs = (((5 4) (5 2) (4 4) (4 2)))"
0 0 4 29 1 #"\n"
0 0 11 3 16 #";; pair  = (5 4)"
0 0 4 29 1 #"\n"
0 0 11 3 12 #";; op    = +"
0 0 4 29 1 #"\n"
0 0 11 3 40 #";; > (cal-op '((5 4 4 2)()()) '(5 4) '+)"
0 0 4 29 1 #"\n"
0 0 11 3 26 #";; (((4 2) (9) ((5 + 4))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; ex. case 2 numbers"
0 0 4 29 1 #"\n"
0 0 11 3 30 #";; state = ((4 2)(1)((5 - 4)))"
0 0 4 29 1 #"\n"
0 0 11 3 22 #";; pairs = ((4 1)(2 1)"
0 0 11 3 1 #"("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 3 #"2))"
0 0 4 29 1 #"\n"
0 0 11 3 16 #";; pair  = (4 1)"
0 0 4 29 1 #"\n"
0 0 11 3 12 #";; op    = +"
0 0 4 29 1 #"\n"
0 0 11 3 45 #";; >  (cal-op '((4 2)(1)((5 - 4))) '(4 1) '+)"
0 0 4 29 1 #"\n"
0 0 11 3 30 #";; (((2) (5) ((4 + (5 - 4)))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"e"
0 0 11 3 1 #"x"
0 0 11 3 1 #"."
0 0 11 3 1 #" "
0 0 11 3 1 #"c"
0 0 11 3 1 #"a"
0 0 11 3 1 #"s"
0 0 11 3 1 #"e"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #" "
0 0 11 3 1 #"n"
0 0 11 3 1 #"u"
0 0 11 3 1 #"m"
0 0 11 3 1 #"b"
0 0 11 3 1 #"e"
0 0 11 3 1 #"r"
0 0 11 3 1 #"s"
0 0 11 3 1 #" "
0 0 11 3 1 #"a"
0 0 11 3 1 #"n"
0 0 11 3 1 #"d"
0 0 11 3 1 #" "
0 0 11 3 1 #"g"
0 0 11 3 1 #"r"
0 0 11 3 1 #"o"
0 0 11 3 1 #"u"
0 0 11 3 1 #"p"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 4 29 1 #"\n"
0 0 11 3 30 #";; state = ((4 2)(1)((5 - 4)))"
0 0 4 29 1 #"\n"
0 0 11 3 14 #";; pair  = (4 "
0 0 11 3 2 #"2)"
0 0 4 29 1 #"\n"
0 0 11 3 12 #";; op    = +"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 2 #" >"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 6 #"cal-op"
0 0 11 3 1 #" "
0 0 11 3 1 #"'"
0 0 11 3 2 #"(("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"1"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 2 #"(("
0 0 11 3 1 #"5"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 3 #")))"
0 0 11 3 1 #" "
0 0 11 3 1 #"'"
0 0 11 3 1 #"("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"'"
0 0 11 3 1 #"+"
0 0 11 3 1 #")"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 5 #" ((()"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"7"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 3 #"((("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"5"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 2 #"  "
0 0 11 3 3 #"(()"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"3"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 3 #"((("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"5"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 2 #"  "
0 0 11 3 3 #"(()"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"9"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 3 #"((("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"x"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"5"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 2 #"  "
0 0 11 3 3 #"(()"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"3"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 3 #"((("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 2 #"\303\267"
0 0 11 3 1 #" "
0 0 11 3 1 #"2"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"5"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 20 #";; ex. case 1 number"
0 0 4 29 1 #"\n"
0 0 11 3 50 #";; > (cal-op '((2) (5) ((4 + (5 - 4)))) '(5 2) '+)"
0 0 4 29 1 #"\n"
0 0 11 3 35 #";; ((() (7) (((4 + (5 - 4)) + 2))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"cal-op"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 3 #"let"
0 0 9 3 1 #"*"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 12 #"div-by-zero?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"and"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"e"
0 0 8 3 2 #"q?"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 8 3 2 #"\303\267"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 16 3 1 #"("
0 0 8 3 1 #"n"
0 0 8 3 1 #"o"
0 0 8 3 1 #"t"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"n"
0 0 8 3 1 #"u"
0 0 8 3 1 #"l"
0 0 8 3 1 #"l"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"a"
0 0 8 3 1 #"d"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 16 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"caadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 16 3 1 #"("
0 0 8 3 2 #"rs"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"f"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"n"
0 0 8 3 1 #"o"
0 0 8 3 1 #"t"
0 0 4 3 1 #" "
0 0 8 3 12 #"div-by-zero?"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 16 3 1 #"("
0 0 8 3 5 #"apply"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 16 #"symbol->operator"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"#"
0 0 14 3 1 #"f"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 16 3 1 #"("
0 0 8 3 4 #"nums"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"length"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"integer?"
0 0 4 3 1 #" "
0 0 8 3 2 #"rs"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 8 3 4 #"nums"
0 0 4 3 1 #" "
0 0 14 3 1 #"4"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 11 3 16 #";; for 4 numbers"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-all"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 39 #"                                       "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-all"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 16 3 2 #"(("
0 0 8 3 2 #"or"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 8 3 4 #"nums"
0 0 4 3 1 #" "
0 0 14 3 1 #"2"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 8 3 4 #"nums"
0 0 4 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 11 3 24 #";; for 2 and 1 number(s)"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 16 3 1 #"("
0 0 9 3 4 #"let*"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 1 #"r"
0 0 8 3 1 #"e"
0 0 8 3 1 #"m"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"n"
0 0 8 3 1 #"-"
0 0 8 3 1 #"n"
0 0 8 3 1 #"u"
0 0 8 3 1 #"m"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"l"
0 0 8 3 1 #"e"
0 0 8 3 1 #"n"
0 0 8 3 1 #"g"
0 0 8 3 1 #"t"
0 0 8 3 1 #"h"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-all"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 16 3 1 #"("
0 0 8 3 7 #"new-num"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-all"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 16 3 1 #"("
0 0 8 3 10 #"add-front?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 4 3 1 #" "
0 0 8 3 7 #"new-num"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"caadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 11 3 7 #";; body"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"f"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"a"
0 0 8 3 1 #"n"
0 0 8 3 1 #"d"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"l"
0 0 8 3 1 #"e"
0 0 8 3 1 #"n"
0 0 8 3 1 #"g"
0 0 8 3 1 #"t"
0 0 8 3 1 #"h"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"a"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 2 #"ta"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 16 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 1 #"2"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 8 3 1 #"r"
0 0 8 3 1 #"e"
0 0 8 3 1 #"m"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 2 #"n-"
0 0 8 3 3 #"num"
0 0 4 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #" "
0 0 11 3 1 #"g"
0 0 11 3 1 #"r"
0 0 11 3 1 #"o"
0 0 11 3 1 #"u"
0 0 11 3 1 #"p"
0 0 11 3 1 #" "
0 0 11 3 1 #"c"
0 0 11 3 1 #"a"
0 0 11 3 1 #"s"
0 0 11 3 1 #"e"
0 0 11 3 1 #" "
0 0 11 3 22 #"((a op b) op (x op y))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #" "
0 0 11 3 1 #"g"
0 0 11 3 1 #"r"
0 0 11 3 1 #"o"
0 0 11 3 1 #"u"
0 0 11 3 1 #"p"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 16 3 1 #"("
0 0 8 3 1 #"g"
0 0 8 3 1 #"e"
0 0 8 3 1 #"t"
0 0 8 3 1 #"-"
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"g"
0 0 8 3 1 #"r"
0 0 8 3 1 #"o"
0 0 8 3 1 #"u"
0 0 8 3 1 #"p"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 4 3 1 #" "
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"n"
0 0 11 3 1 #"o"
0 0 11 3 1 #"n"
0 0 11 3 1 #"-"
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #" "
0 0 11 3 1 #"g"
0 0 11 3 1 #"r"
0 0 11 3 1 #"o"
0 0 11 3 1 #"u"
0 0 11 3 1 #"p"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-all"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 45 #"                                             "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-all"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 4 3 1 #" "
0 0 8 3 10 #"add-front?"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 8 3 7 #"new-num"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"caaddr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"caaddr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 8 3 7 #"new-num"
0 0 16 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 16 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 18 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 4 #"()))"
0 0 18 29 1 #"\n"
0 0 18 3 8 #"        "
0 0 11 3 28 #";; else rs isn't an integer."
0 0 18 29 1 #"\n"
0 0 18 3 8 #"        "
0 0 14 3 1 #"'"
0 0 16 3 5 #"())))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #"-"
0 0 11 3 1 #"g"
0 0 11 3 1 #"r"
0 0 11 3 1 #"o"
0 0 11 3 1 #"u"
0 0 11 3 1 #"p"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"s"
0 0 11 3 1 #"t"
0 0 11 3 1 #"a"
0 0 11 3 1 #"t"
0 0 11 3 1 #"e"
0 0 11 3 1 #" "
0 0 11 3 3 #"= ("
0 0 11 3 1 #"("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 3 #"4)("
0 0 11 3 3 #"8)("
0 0 11 3 1 #"("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 4 #"4)))"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #" "
0 0 11 3 2 #" ="
0 0 11 3 2 #" ("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 2 #"4)"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"o"
0 0 11 3 1 #"p"
0 0 11 3 1 #" "
0 0 11 3 1 #" "
0 0 11 3 1 #" "
0 0 11 3 4 #" = +"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"t"
0 0 11 3 1 #"e"
0 0 11 3 1 #"s"
0 0 11 3 1 #"t"
0 0 11 3 1 #" "
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #">"
0 0 11 3 2 #" ("
0 0 11 3 14 #"get-pair-group"
0 0 11 3 1 #" "
0 0 11 3 1 #"'"
0 0 11 3 2 #"(("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 2 #")("
0 0 11 3 1 #"8"
0 0 11 3 3 #")(("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"+"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 3 #")))"
0 0 11 3 1 #" "
0 0 11 3 1 #"'"
0 0 11 3 1 #"("
0 0 11 3 1 #"4"
0 0 11 3 1 #" "
0 0 11 3 1 #"4"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #"'"
0 0 11 3 2 #"\303\267"
0 0 11 3 1 #")"
0 0 11 3 1 #" "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"c"
0 0 11 3 1 #"h"
0 0 11 3 1 #"a"
0 0 11 3 1 #"n"
0 0 11 3 1 #"g"
0 0 11 3 1 #"e"
0 0 11 3 1 #" "
0 0 11 3 1 #"o"
0 0 11 3 1 #"p"
0 0 11 3 1 #"e"
0 0 11 3 1 #"r"
0 0 11 3 1 #"a"
0 0 11 3 1 #"t"
0 0 11 3 1 #"o"
0 0 11 3 12 #"r to +, -, x"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 14 #"get-pair-group"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 4 3 1 #" "
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 2 #"de"
0 0 9 3 1 #"f"
0 0 9 3 1 #"i"
0 0 9 3 1 #"n"
0 0 9 3 1 #"e"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"g"
0 0 8 3 1 #"r"
0 0 8 3 3 #"oup"
0 0 4 3 1 #" "
0 0 8 3 4 #"g-op"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 1 #"c"
0 0 9 3 1 #"o"
0 0 9 3 1 #"n"
0 0 9 3 1 #"d"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 1 #"n"
0 0 8 3 1 #"u"
0 0 8 3 1 #"l"
0 0 8 3 1 #"l"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 1 #"-"
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 1 #"e"
0 0 8 3 1 #"l"
0 0 8 3 1 #"s"
0 0 8 3 1 #"e"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 16 3 1 #"("
0 0 9 3 1 #"l"
0 0 9 3 3 #"et*"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"a"
0 0 8 3 1 #"p"
0 0 8 3 1 #"p"
0 0 8 3 1 #"l"
0 0 8 3 1 #"y"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"s"
0 0 8 3 1 #"y"
0 0 8 3 1 #"m"
0 0 8 3 1 #"b"
0 0 8 3 1 #"o"
0 0 8 3 1 #"l"
0 0 8 3 1 #"-"
0 0 8 3 1 #">"
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 8 3 1 #"e"
0 0 8 3 1 #"r"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"o"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"a"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 3 #"-op"
0 0 16 3 2 #"))"
0 0 4 3 1 #" "
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 16 3 2 #"))"
0 0 4 3 1 #" "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #" "
0 0 11 3 1 #"r"
0 0 11 3 1 #"e"
0 0 11 3 1 #"s"
0 0 11 3 1 #"u"
0 0 11 3 1 #"l"
0 0 11 3 1 #"t"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 16 3 1 #"("
0 0 8 3 1 #"m"
0 0 8 3 1 #"o"
0 0 8 3 1 #"r"
0 0 8 3 1 #"e"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 4 3 1 #" "
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"a"
0 0 8 3 1 #"a"
0 0 8 3 1 #"d"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 16 3 3 #")))"
0 0 4 3 1 #" "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"m"
0 0 11 3 1 #"o"
0 0 11 3 1 #"r"
0 0 11 3 1 #"e"
0 0 11 3 1 #"?"
0 0 11 3 1 #" "
0 0 11 3 2 #"= "
0 0 11 3 1 #"#"
0 0 11 3 1 #"t"
0 0 11 3 1 #","
0 0 11 3 1 #" "
0 0 11 3 1 #"i"
0 0 11 3 1 #"f"
0 0 11 3 1 #" "
0 0 11 3 1 #"p"
0 0 11 3 1 #"a"
0 0 11 3 1 #"i"
0 0 11 3 1 #"r"
0 0 11 3 1 #"-"
0 0 11 3 1 #"r"
0 0 11 3 1 #"s"
0 0 11 3 1 #" "
0 0 11 3 1 #">"
0 0 11 3 1 #" "
0 0 11 3 1 #"("
0 0 11 3 1 #"c"
0 0 11 3 1 #"a"
0 0 11 3 1 #"a"
0 0 11 3 1 #"d"
0 0 11 3 1 #"r"
0 0 11 3 1 #" "
0 0 11 3 1 #"s"
0 0 11 3 1 #"t"
0 0 11 3 1 #"a"
0 0 11 3 1 #"t"
0 0 11 3 2 #"e)"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 16 3 1 #"("
0 0 8 3 1 #"d"
0 0 8 3 1 #"i"
0 0 8 3 1 #"v"
0 0 8 3 1 #"-"
0 0 8 3 1 #"b"
0 0 8 3 1 #"y"
0 0 8 3 1 #"-"
0 0 8 3 1 #"z"
0 0 8 3 1 #"e"
0 0 8 3 1 #"r"
0 0 8 3 1 #"o"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"o"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"and"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 8 3 2 #"\303\267"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"caadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 16 3 1 #"("
0 0 8 3 3 #"and"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 8 3 2 #"\303\267"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"="
0 0 4 3 1 #" "
0 0 8 3 2 #"pa"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 16 3 1 #"("
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"f"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"n"
0 0 8 3 1 #"o"
0 0 8 3 1 #"t"
0 0 4 3 1 #" "
0 0 8 3 1 #"d"
0 0 8 3 1 #"i"
0 0 8 3 1 #"v"
0 0 8 3 1 #"-"
0 0 8 3 1 #"b"
0 0 8 3 1 #"y"
0 0 8 3 1 #"-"
0 0 8 3 1 #"z"
0 0 8 3 1 #"e"
0 0 8 3 1 #"r"
0 0 8 3 1 #"o"
0 0 8 3 1 #"?"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"f"
0 0 4 3 1 #" "
0 0 8 3 1 #"m"
0 0 8 3 1 #"o"
0 0 8 3 1 #"r"
0 0 8 3 1 #"e"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 16 3 1 #"("
0 0 8 3 5 #"apply"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #"sy"
0 0 8 3 3 #"mbo"
0 0 8 3 9 #"l->operat"
0 0 8 3 2 #"or"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #"li"
0 0 8 3 2 #"st"
0 0 4 3 1 #" "
0 0 8 3 7 #"pair-rs"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"caadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 16 3 1 #"("
0 0 8 3 5 #"apply"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #"sy"
0 0 8 3 3 #"mbo"
0 0 8 3 9 #"l->operat"
0 0 8 3 2 #"or"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #"li"
0 0 8 3 2 #"st"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"caadr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 7 #"pair-rs"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 14 3 1 #"#"
0 0 14 3 1 #"f"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"b"
0 0 11 3 1 #"o"
0 0 11 3 1 #"d"
0 0 11 3 1 #"y"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"f"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"n"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 8 3 1 #"g"
0 0 8 3 1 #"e"
0 0 8 3 2 #"r?"
0 0 4 3 1 #" "
0 0 8 3 1 #"r"
0 0 8 3 1 #"s"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"o"
0 0 8 3 1 #"n"
0 0 8 3 1 #"s"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #"li"
0 0 8 3 2 #"st"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"r"
0 0 8 3 1 #"e"
0 0 8 3 1 #"m"
0 0 8 3 1 #"o"
0 0 8 3 1 #"v"
0 0 8 3 1 #"e"
0 0 8 3 1 #"-"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 8 3 1 #"l"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"a"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 16 3 1 #"("
0 0 8 3 2 #"li"
0 0 8 3 2 #"st"
0 0 4 3 1 #" "
0 0 8 3 2 #"rs"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 16 3 1 #"("
0 0 8 3 1 #"i"
0 0 8 3 1 #"f"
0 0 4 3 1 #" "
0 0 8 3 5 #"more?"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 4 #"g-op"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 2 #"))"
0 0 4 3 1 #" "
0 0 8 3 2 #"op"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"caaddr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"caaddr"
0 0 4 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 4 #"g-op"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 4 #"pair"
0 0 16 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 14 #" cons with ..."
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 16 3 1 #"("
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"g"
0 0 8 3 1 #"r"
0 0 8 3 1 #"o"
0 0 8 3 1 #"u"
0 0 8 3 1 #"p"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"d"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 1 #"-"
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 3 #"rs "
0 0 11 3 1 #"i"
0 0 11 3 1 #"s"
0 0 11 3 1 #" "
0 0 11 3 1 #"n"
0 0 11 3 1 #"o"
0 0 11 3 1 #"t"
0 0 11 3 1 #" "
0 0 11 3 1 #"a"
0 0 11 3 1 #"n"
0 0 11 3 2 #" i"
0 0 11 3 1 #"n"
0 0 11 3 1 #"t"
0 0 11 3 1 #"e"
0 0 11 3 1 #"g"
0 0 11 3 1 #"e"
0 0 11 3 1 #"r"
0 0 11 3 1 #","
0 0 11 3 1 #" "
0 0 11 3 1 #"d"
0 0 11 3 1 #"o"
0 0 11 3 1 #" "
0 0 11 3 1 #"n"
0 0 11 3 1 #"e"
0 0 11 3 1 #"x"
0 0 11 3 1 #"t"
0 0 11 3 1 #" "
0 0 11 3 1 #"g"
0 0 11 3 1 #"r"
0 0 11 3 1 #"o"
0 0 11 3 1 #"u"
0 0 11 3 1 #"p"
0 0 11 3 1 #" "
0 0 11 3 1 #"o"
0 0 11 3 1 #"p"
0 0 11 3 1 #"e"
0 0 11 3 1 #"r"
0 0 11 3 1 #"a"
0 0 11 3 1 #"t"
0 0 11 3 1 #"o"
0 0 11 3 1 #"r"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 16 3 1 #"("
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"g"
0 0 8 3 1 #"r"
0 0 8 3 1 #"o"
0 0 8 3 1 #"u"
0 0 8 3 1 #"p"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"d"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 1 #"-"
0 0 8 3 1 #"o"
0 0 8 3 1 #"p"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 8 3 1 #"p"
0 0 8 3 1 #"a"
0 0 8 3 1 #"i"
0 0 8 3 1 #"r"
0 0 8 3 1 #"-"
0 0 8 3 1 #"g"
0 0 8 3 1 #"r"
0 0 8 3 1 #"o"
0 0 8 3 1 #"u"
0 0 8 3 1 #"p"
0 0 4 3 1 #" "
0 0 8 3 1 #"O"
0 0 8 3 1 #"P"
0 0 8 3 1 #"s"
0 0 16 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 11 3 22 #";; pair index 0 to n-1"
0 0 18 29 1 #"\n"
0 0 11 3 35 #";; where n is length of (car state)"
0 0 18 29 1 #"\n"
0 0 11 3 6 #";; ex."
0 0 18 29 1 #"\n"
0 0 11 3 38 #";; >  (get-all-pairs '((5 3 1 2)()()))"
0 0 18 29 1 #"\n"
0 0 11 3 40 #";; ((5 3) (5 1) (5 2) (3 1) (3 2) (2 1))"
0 0 18 29 1 #"\n"
0 0 11 3 38 #";; >  (get-all-pairs '((5 3 3 2)()()))"
0 0 18 29 1 #"\n"
0 0 11 3 28 #";; ((5 3) (5 2) (3 3) (3 2))"
0 0 18 29 1 #"\n"
0 0 11 3 38 #";; >  (get-all-pairs '((4 4 4 3)()()))"
0 0 18 29 1 #"\n"
0 0 11 3 16 #";; ((4 4) (4 3))"
0 0 18 29 1 #"\n"
0 0 11 3 38 #";; >  (get-all-pairs '((3 3 3 3)()()))"
0 0 18 29 1 #"\n"
0 0 11 3 10 #";; ((3 3))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 13 #"get-all-pairs"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 9 #"all-pairs"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 18 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 2 #">="
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"length"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 18 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"           "
0 0 16 3 1 #"("
0 0 8 3 6 #"append"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"get-pair"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"                   "
0 0 16 3 1 #"("
0 0 8 3 9 #"all-pairs"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 6 #"))))))"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 16 3 1 #"("
0 0 8 3 10 #"remove-dup"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 9 #"all-pairs"
0 0 18 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 11 3 26 #";; state : ((5 1 2 3)()())"
0 0 18 29 1 #"\n"
0 0 11 3 12 #";; index : 0"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; output : ()"
0 0 18 29 1 #"\n"
0 0 11 3 12 #";; index : 1"
0 0 18 29 1 #"\n"
0 0 11 3 29 #";; output : ((5 1)(5 2)(5 3))"
0 0 18 29 1 #"\n"
0 0 11 3 12 #";; index : 2"
0 0 18 29 1 #"\n"
0 0 11 3 24 #";; output : ((1 2)(1 3))"
0 0 18 29 1 #"\n"
0 0 11 3 18 #";; index : 3 (n-1)"
0 0 18 29 1 #"\n"
0 0 11 3 19 #";; output : ((2 3))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 11 3 26 #";; state : ((2 3)(6)(5+1))"
0 0 18 29 1 #"\n"
0 0 11 3 12 #";; index : 0"
0 0 18 29 1 #"\n"
0 0 11 3 24 #";; output : ((6 2)(6 3))"
0 0 18 29 1 #"\n"
0 0 11 3 18 #";; index : 1 (n-1)"
0 0 18 29 1 #"\n"
0 0 11 3 19 #";; output : ((2 3))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"get-pair"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 3 #"let"
0 0 18 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 1 #"x"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"get-x"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 16 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 11 3 17 #";; inner function"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 9 #"make-pair"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 1 #"x"
0 0 18 3 1 #" "
0 0 8 3 10 #"next-index"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 6 #"      "
0 0 16 3 1 #"("
0 0 9 3 3 #"let"
0 0 18 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 4 #"next"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"get-x"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 10 #"next-index"
0 0 16 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 3 8 #"        "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 18 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 18 3 1 #" "
0 0 8 3 4 #"next"
0 0 16 3 1 #")"
0 0 18 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 18 29 1 #"\n"
0 0 18 3 15 #"               "
0 0 16 3 1 #"("
0 0 8 3 4 #"cons"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"sort"
0 0 18 3 1 #" "
0 0 8 3 1 #">"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 18 3 1 #" "
0 0 8 3 1 #"x"
0 0 18 3 1 #" "
0 0 8 3 4 #"next"
0 0 16 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"                     "
0 0 16 3 1 #"("
0 0 8 3 9 #"make-pair"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 1 #"x"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 18 3 1 #" "
0 0 8 3 10 #"next-index"
0 0 18 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 7 #")))))))"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 11 3 7 #";; body"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 18 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 18 3 1 #" "
0 0 8 3 1 #"x"
0 0 16 3 1 #")"
0 0 18 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"           "
0 0 16 3 1 #"("
0 0 8 3 9 #"make-pair"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 1 #"x"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 6 #"))))))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 11 3 26 #";; state : ((5 1 2 3)()())"
0 0 18 29 1 #"\n"
0 0 11 3 15 #";; index 0 : ()"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 1 : 5"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 2 : 1"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 3 : 2"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 4 : 3"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 11 3 26 #";; state : ((2 3)(6)(5+1))"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 0 : 6"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 1 : 2"
0 0 18 29 1 #"\n"
0 0 11 3 14 #";; index 2 : 3"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"get-x"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"and"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #">="
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"           "
0 0 16 3 1 #"("
0 0 8 3 2 #"<="
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"length"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 4 #"))))"
0 0 18 29 1 #"\n"
0 0 18 3 6 #"      "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 18 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 1 #"="
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 1 #")"
0 0 18 3 1 #" "
0 0 18 29 1 #"\n"
0 0 18 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 5 #"null?"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"                 "
0 0 14 3 1 #"'"
0 0 16 3 2 #"()"
0 0 18 3 1 #" "
0 0 18 29 1 #"\n"
0 0 18 3 17 #"                 "
0 0 16 3 1 #"("
0 0 8 3 5 #"caadr"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"            "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 8 #"list-ref"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 18 3 1 #" "
0 0 8 3 5 #"state"
0 0 16 3 1 #")"
0 0 18 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"-"
0 0 18 3 1 #" "
0 0 8 3 5 #"index"
0 0 18 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 4 #"))))"
0 0 18 29 1 #"\n"
0 0 18 3 6 #"      "
0 0 14 3 1 #"'"
0 0 16 3 4 #"()))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #" "
0 0 11 3 1 #"S"
0 0 11 3 1 #"e"
0 0 11 3 1 #"a"
0 0 11 3 1 #"r"
0 0 11 3 1 #"c"
0 0 11 3 1 #"h"
0 0 11 3 1 #" "
0 0 11 3 1 #"f"
0 0 11 3 1 #"u"
0 0 11 3 1 #"n"
0 0 11 3 1 #"c"
0 0 11 3 1 #"t"
0 0 11 3 1 #"i"
0 0 11 3 1 #"o"
0 0 11 3 1 #"n"
0 0 11 3 1 #" "
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 11 3 1 #"-"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 11 3 1 #";"
0 0 11 3 1 #";"
0 0 11 3 1 #" "
0 0 11 3 1 #"m"
0 0 11 3 1 #"a"
0 0 11 3 1 #"t"
0 0 11 3 1 #"c"
0 0 11 3 1 #"h"
0 0 11 3 1 #"?"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 1 #"d"
0 0 9 3 4 #"efin"
0 0 9 3 1 #"e"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"m"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"c"
0 0 8 3 1 #"h"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 1 #"o"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 8 3 1 #"a"
0 0 8 3 1 #"n"
0 0 8 3 1 #"d"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"e"
0 0 8 3 1 #"q"
0 0 8 3 3 #"ual"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 2 #"ar"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 3 #"tat"
0 0 8 3 1 #"e"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 1 #"a"
0 0 8 3 1 #"r"
0 0 4 3 1 #" "
0 0 8 3 1 #"g"
0 0 8 3 1 #"o"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 16 3 1 #"("
0 0 8 3 1 #"e"
0 0 8 3 1 #"q"
0 0 8 3 1 #"u"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"c"
0 0 8 3 3 #"adr"
0 0 4 3 1 #" "
0 0 8 3 1 #"s"
0 0 8 3 1 #"t"
0 0 8 3 3 #"ate"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 8 3 4 #"goal"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 11 3 21 #";; BFS + visited list"
0 0 4 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 12 #"BFS-nocycles"
0 0 4 3 1 #" "
0 0 8 3 10 #"startState"
0 0 4 3 1 #" "
0 0 8 3 9 #"goalState"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 9 #"BFS-paths"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"#f"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 2 #"(("
0 0 8 3 3 #"mat"
0 0 8 3 1 #"c"
0 0 8 3 2 #"h?"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"caar"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 9 #"goalState"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 9 #"BFS-paths"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"append"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 16 3 1 #"("
0 0 8 3 10 #"extend-all"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 9 #"GET-MOVES"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"caar"
0 0 4 3 1 #" "
0 0 8 3 5 #"paths"
0 0 16 3 8 #"))))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 10 #"extend-all"
0 0 4 3 1 #" "
0 0 8 3 4 #"path"
0 0 4 3 1 #" "
0 0 8 3 10 #"nextStates"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 4 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 4 3 1 #" "
0 0 8 3 10 #"nextStates"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 2 #"(("
0 0 8 3 1 #"e"
0 0 8 3 1 #"q"
0 0 8 3 1 #"u"
0 0 8 3 1 #"a"
0 0 8 3 1 #"l"
0 0 8 3 1 #"?"
0 0 4 3 1 #" "
0 0 8 3 1 #"n"
0 0 8 3 1 #"e"
0 0 8 3 1 #"x"
0 0 8 3 1 #"t"
0 0 8 3 1 #"S"
0 0 8 3 1 #"t"
0 0 8 3 1 #"a"
0 0 8 3 1 #"t"
0 0 8 3 1 #"e"
0 0 8 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 1 #"#"
0 0 14 3 1 #"f"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 2 #"(("
0 0 8 3 6 #"member"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 10 #"nextStates"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 4 #"path"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 10 #"extend-all"
0 0 4 3 1 #" "
0 0 8 3 4 #"path"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 8 3 10 #"nextStates"
0 0 16 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cons"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"cons"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 4 3 1 #" "
0 0 8 3 10 #"nextStates"
0 0 16 3 1 #")"
0 0 4 3 1 #" "
0 0 8 3 4 #"path"
0 0 16 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 16 3 1 #"("
0 0 8 3 10 #"extend-all"
0 0 4 3 1 #" "
0 0 8 3 4 #"path"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 8 3 10 #"nextStates"
0 0 16 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 16 3 1 #"("
0 0 8 3 9 #"BFS-paths"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 4 3 1 #" "
0 0 8 3 10 #"startState"
0 0 16 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000003031 4 00000000000 1 00000000000 504 0 11 3 60
#";; ------------ Test All number 1 1 1 1 to 9 9 9 9 ---------"
0 0 2 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 11 #"next-number"
0 0 2 3 1 #" "
0 0 8 3 1 #"n"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 3 #"let"
0 0 2 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 2 #"n1"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"list-ref"
0 0 2 3 1 #" "
0 0 8 3 1 #"n"
0 0 2 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"list-ref"
0 0 2 3 1 #" "
0 0 8 3 1 #"n"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"list-ref"
0 0 2 3 1 #" "
0 0 8 3 1 #"n"
0 0 2 3 1 #" "
0 0 14 3 1 #"2"
0 0 16 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 2 #"n4"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 8 #"list-ref"
0 0 2 3 1 #" "
0 0 8 3 1 #"n"
0 0 2 3 1 #" "
0 0 14 3 1 #"3"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n4"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 1 #"9"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 9 3 5 #"begin"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 4 #"set!"
0 0 2 3 1 #" "
0 0 8 3 2 #"n4"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 10 #"          "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 1 #"9"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 14 #"              "
0 0 16 3 1 #"("
0 0 9 3 5 #"begin"
0 0 2 29 1 #"\n"
0 0 2 3 16 #"                "
0 0 16 3 1 #"("
0 0 8 3 4 #"set!"
0 0 2 3 1 #" "
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 16 #"                "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 1 #"9"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 20 #"                    "
0 0 16 3 1 #"("
0 0 9 3 5 #"begin"
0 0 2 29 1 #"\n"
0 0 2 3 22 #"                      "
0 0 16 3 1 #"("
0 0 8 3 4 #"set!"
0 0 2 3 1 #" "
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 22 #"                      "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n1"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 1 #"9"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 14 3 2 #"#f"
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n1"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 8 3 2 #"n4"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 20 #"                    "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 2 3 1 #" "
0 0 8 3 2 #"n1"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 8 3 2 #"n4"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 14 #"              "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 2 3 1 #" "
0 0 8 3 2 #"n1"
0 0 2 3 1 #" "
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 8 3 2 #"n4"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 2 3 1 #" "
0 0 8 3 2 #"n1"
0 0 2 3 1 #" "
0 0 8 3 2 #"n2"
0 0 2 3 1 #" "
0 0 8 3 2 #"n3"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"n4"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 5 #")))))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 11 #"make-number"
0 0 2 3 1 #" "
0 0 8 3 6 #"number"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 3 #"let"
0 0 2 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 10 #"new-number"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 11 #"next-number"
0 0 2 3 1 #" "
0 0 8 3 6 #"number"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"equal?"
0 0 2 3 1 #" "
0 0 8 3 10 #"new-number"
0 0 2 3 1 #" "
0 0 14 3 2 #"#f"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 2 3 1 #" "
0 0 8 3 6 #"number"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 4 #"cons"
0 0 2 3 1 #" "
0 0 8 3 6 #"number"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 11 #"make-number"
0 0 2 3 1 #" "
0 0 8 3 10 #"new-number"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 16 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 11 3 13 #";; all-number"
0 0 2 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 2 3 1 #" "
0 0 8 3 11 #"all-numbers"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 11 #"make-number"
0 0 2 3 1 #" "
0 0 14 3 1 #"'"
0 0 16 3 1 #"("
0 0 14 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 11 3 7 #";; test"
0 0 2 29 1 #"\n"
0 0 16 3 1 #"("
0 0 9 3 6 #"define"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 11 #"test-search"
0 0 2 3 1 #" "
0 0 8 3 3 #"lst"
0 0 2 3 1 #" "
0 0 8 3 2 #"f!"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 16 3 1 #"("
0 0 9 3 4 #"cond"
0 0 2 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 5 #"null?"
0 0 2 3 1 #" "
0 0 8 3 3 #"lst"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"#f"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 16 3 1 #"("
0 0 8 3 4 #"else"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 16 3 1 #"("
0 0 9 3 5 #"begin"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 16 3 1 #"("
0 0 8 3 7 #"display"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 2 3 1 #" "
0 0 8 3 3 #"lst"
0 0 16 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 16 3 1 #"("
0 0 8 3 7 #"newline"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 16 3 1 #"("
0 0 9 3 4 #"let*"
0 0 2 3 1 #" "
0 0 16 3 2 #"(("
0 0 8 3 4 #"solv"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 12 #"BFS-nocycles"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 4 #"list"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"car"
0 0 2 3 1 #" "
0 0 8 3 3 #"lst"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 16 3 2 #"()"
0 0 2 3 1 #" "
0 0 16 3 3 #"())"
0 0 2 3 1 #" "
0 0 8 3 4 #"goal"
0 0 16 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 18 #"                  "
0 0 16 3 1 #"("
0 0 8 3 4 #"nwf!"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 6 #"equal?"
0 0 2 3 1 #" "
0 0 8 3 4 #"solv"
0 0 2 3 1 #" "
0 0 14 3 2 #"#f"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #"+"
0 0 2 3 1 #" "
0 0 8 3 2 #"f!"
0 0 2 3 1 #" "
0 0 14 3 1 #"1"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 8 3 2 #"f!"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 7 #"display"
0 0 2 3 1 #" "
0 0 8 3 4 #"solv"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 2 #"if"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 1 #">"
0 0 2 3 1 #" "
0 0 8 3 4 #"nwf!"
0 0 2 3 1 #" "
0 0 8 3 2 #"f!"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 17 #"                 "
0 0 16 3 1 #"("
0 0 9 3 5 #"begin"
0 0 2 29 1 #"\n"
0 0 2 3 19 #"                   "
0 0 16 3 1 #"("
0 0 8 3 7 #"display"
0 0 2 3 1 #" "
0 0 13 3 3 #"\" \""
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 19 #"                   "
0 0 16 3 1 #"("
0 0 8 3 7 #"display"
0 0 2 3 1 #" "
0 0 8 3 4 #"nwf!"
0 0 16 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 7 #"newline"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 16 3 1 #"("
0 0 8 3 11 #"test-search"
0 0 2 3 1 #" "
0 0 16 3 1 #"("
0 0 8 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 8 3 3 #"lst"
0 0 16 3 1 #")"
0 0 2 3 1 #" "
0 0 8 3 4 #"nwf!"
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 16 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 16 3 4 #"))))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 16 3 1 #"("
0 0 8 3 11 #"test-search"
0 0 2 3 1 #" "
0 0 8 3 11 #"all-numbers"
0 0 2 3 1 #" "
0 0 14 3 1 #"0"
0 0 16 3 1 #")"
0 00000000000 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 18 29 1 #"\n"
0 00000000000
